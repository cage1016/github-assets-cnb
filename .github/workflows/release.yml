name: Release
on:
  release:
    types:
      - published
jobs:
  register:
    name: Package, Publish, and Register
    runs-on:
      - ubuntu-latest
    steps:
      - name: Parse Event
        id: event
        run: |
          echo "::set-output name=tag::$(jq -r '.release.tag_name' "${GITHUB_EVENT_PATH}" | sed s/^v//)"
          echo "::set-output name=download_url::$(jq -r '.release.assets[] | select(.name | endswith(".cnb")) | .url' "${GITHUB_EVENT_PATH}")"

      - name: Download
        id: download
        uses: paketo-buildpacks/github-config/actions/release/download-asset@main
        with:
          url: ${{ steps.event.outputs.download_url }}
          output: "/github/workspace/buildpackage.cnb"
          token: ${{ secrets.GHCR_TOKEN }}

      - name: Push to GHCR
        id: push
        env:
          REPO: ghcr.io/${{ github.repository_owner }}/buildpacks
        run: |
          PACKAGE="${REPO}/$(echo "${{github.repository}}" | sed 's/\//_/g')"
          echo "${{ secrets.GHCR_TOKEN }}" | sudo skopeo login --username "${{ github.repository_owner }}" --password-stdin ghcr.io
          sudo skopeo copy "oci-archive:${GITHUB_WORKSPACE}/buildpackage.cnb" "docker://${PACKAGE}:${{ steps.event.outputs.tag }}"
          sudo skopeo copy "oci-archive:${GITHUB_WORKSPACE}/buildpackage.cnb" "docker://${PACKAGE}:latest"

          echo "::set-output name=digest::$(sudo skopeo inspect "oci-archive:${GITHUB_WORKSPACE}/buildpackage.cnb" | jq -r .Digest)"
          echo "::set-output name=image::$PACKAGE"

      - id: register
        uses: docker://ghcr.io/buildpacks/actions/registry/request-add-entry:4.1.0
        with:
          id:      ${{ github.repository }}
          version: ${{ steps.event.outputs.tag }}
          address: ${{ steps.push.outputs.image }}@${{ steps.push.outputs.digest }}
          token:   ${{ secrets.PUBLIC_REPO_TOKEN }}